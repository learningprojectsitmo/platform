<?xml version="1.0"?>
<odoo>

    <record id="stage_id_sync_server_action" model="ir.actions.server">
        <field name="name">Project status sync with stage_id</field>
        <field name="model_id" ref="model_lp_project"/>
        <field name="state">code</field>
        <field name="code">
# Available variables:
# - env: Odoo Environment on which the action is triggered
# - model: Odoo Model of the record on which the action is triggered; is a void recordset
# - record: record on which the action is triggered; may be void
# - records: recordset of all records on which the action is triggered in multi-mode; may be void
# - time, datetime, dateutil, timezone: useful Python libraries
# - float_compare: Odoo function to compare floats based on specific precisions
# - log: log(message, level='info'): logging function to record debug information in ir.logging table
# - UserError: Warning Exception to use with raise
# - Command: x2Many commands namespace
# To return an action, assign: action = {...}

project_id = record.project.id
status = record.status

params = env['ir.config_parameter'].sudo()

status_by_stage_id = {
    'Unconfirmed': int(params.get_param('project_stage_1_id')),
    'OnApproval': int(params.get_param('project_stage_2_id')),
    'TeamFormation': int(params.get_param('project_stage_3_id')),
    'CreationTex': int(params.get_param('project_stage_4_id')),
    'OnApprovalTex': int(params.get_param('project_stage_5_id')),
    'Teamwork': int(params.get_param('project_stage_6_id')),
    'Ready to defend': int(params.get_param('project_stage_7_id')),
    'Past': int(params.get_param('project_stage_8_id')),
}

project_project = env['project.project'].search([('id', '=', project_id)])
if project_project:
    project_project.sudo().write({'stage_id': int(status_by_stage_id.get(status))})
        </field>
    </record>


    <record id="stage_id_sync_automated_action" model="base.automation">
        <field name="name">Project status sync with stage_id</field>
        <field name="model_id" ref="model_lp_project"/>
        <field name="trigger">on_create_or_write</field>
        <field name="active">True</field>
        <field name="action_server_ids" eval="[(6, 0, [ref('stage_id_sync_server_action')])]"/>
        <field name="trigger_field_ids" eval="[ (4, ref('field_lp_project__status')), ]"/>
    </record>
</odoo>
